@page "/Admin/Reports/Books"
@model BooksModel
@{
    ViewData["Title"] = "Báo cáo Sách";
    Layout = "_AdminLayout";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/date-fns@2.29.3/index.min.js"></script>
<script
    src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns@2.0.0/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

<!-- Page Header -->
<div class="admin-card mb-4">
    <div class="card-header bg-success text-white">
        <div class="d-flex justify-content-between align-items-center">
            <h4 class="mb-0">
                <i class="fas fa-book me-2"></i>Báo cáo Sách
            </h4>
            <a href="/Admin/Reports" class="btn btn-light btn-sm">
                <i class="fas fa-arrow-left me-1"></i>Quay lại
            </a>
        </div>
    </div>
</div>

<!-- Filter Section -->
<div class="admin-card mb-4">
    <div class="card-body p-3">
        <form method="get">
            <div class="row g-3 align-items-center">
                <div class="col-md-3">
                    <label class="form-label fw-bold">Khoảng thời gian</label>
                    <select class="form-select" asp-for="DateRange" onchange="this.form.submit()">
                        <option value="last7days">7 ngày qua</option>
                        <option value="last30days">30 ngày qua</option>
                        <option value="last90days">90 ngày qua</option>
                        <option value="thismonth">Tháng này</option>
                        <option value="last6months">6 tháng qua</option>
                        <option value="thisyear">Năm này</option>
                        <option value="lastyear">Năm qua</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label fw-bold">Thể loại</label>
                    <select class="form-select" asp-for="Genre" onchange="this.form.submit()">
                        <option value="">Tất cả thể loại</option>
                        @foreach (var genre in Model.Genres)
                        {
                            <option value="@genre">@genre</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label fw-bold">Nhà xuất bản</label>
                    <select class="form-select" asp-for="PublisherId" onchange="this.form.submit()">
                        <option value="">Tất cả NXB</option>
                        @foreach (var publisher in Model.Publishers)
                        {
                            <option value="@publisher.PublisherId">@publisher.PublisherName</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label fw-bold">Tác giả</label>
                    <select class="form-select" asp-for="AuthorId" onchange="this.form.submit()">
                        <option value="">Tất cả tác giả</option>
                        @foreach (var author in Model.Authors)
                        {
                            <option value="@author.AuthorId">@author.AuthorName</option>
                        }
                    </select>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="admin-card bg-success text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.TotalBooks</h3>
                        <p class="mb-0">Tổng sách</p>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-book fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="admin-card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.AveragePrice.ToString("N0")đ</h3>
                        <p class="mb-0">Giá trung bình</p>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-money-bill-wave fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="admin-card bg-info text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.TotalViews.ToString("N0")</h3>
                        <p class="mb-0">Tổng lượt xem</p>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-eye fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="admin-card bg-warning text-dark">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <h3 class="mb-0">@Model.TotalReviews</h3>
                        <p class="mb-0">Tổng đánh giá</p>
                        <small class="opacity-75">Chưa có hệ thống rating</small>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-comment fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Charts Grid -->
<div class="row">
    <!-- Books Timeline Chart -->
    <div class="col-lg-6 mb-4">
        <div class="admin-card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-chart-line me-2"></i>Xu hướng thêm sách</h5>
            </div>
            <div class="card-body">
                <canvas id="booksTimelineChart" height="200"></canvas>
            </div>
        </div>
    </div>

    <!-- Books by Genre Chart -->
    <div class="col-lg-6 mb-4">
        <div class="admin-card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-chart-pie me-2"></i>Sách theo thể loại</h5>
            </div>
            <div class="card-body">
                <canvas id="booksByGenreChart" height="200"></canvas>
            </div>
        </div>
    </div>

    <!-- Books by Price Range Chart -->
    <div class="col-lg-6 mb-4">
        <div class="admin-card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-chart-bar me-2"></i>Sách theo mức giá</h5>
            </div>
            <div class="card-body">
                <canvas id="booksByPriceChart" height="200"></canvas>
            </div>
        </div>
    </div>

    <!-- Most Viewed Books Chart -->
    <div class="col-lg-6 mb-4">
        <div class="admin-card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-eye me-2"></i>Sách được xem nhiều nhất</h5>
            </div>
            <div class="card-body">
                <canvas id="mostViewedChart" height="200"></canvas>
            </div>
        </div>
    </div>

    <!-- Books Without Reviews Chart -->
    <div class="col-lg-12 mb-4">
        <div class="admin-card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-comment-slash me-2"></i>Sách chưa có đánh giá (theo ngày tạo)</h5>
            </div>
            <div class="card-body">
                <canvas id="booksWithoutReviewsChart" height="150"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Data from server
        const chartData = {
            booksTimeline: @Html.Raw(Model.BooksTimelineJson),
            booksByGenre: @Html.Raw(Model.BooksByGenreJson),
            booksByPriceRange: @Html.Raw(Model.BooksByPriceRangeJson),
            mostViewed: @Html.Raw(Model.MostViewedBooksJson),
            booksWithoutReviews: @Html.Raw(Model.BooksWithoutReviewsJson)
                };

        // Colors
        const colors = {
            primary: '#0d6efd',
            success: '#198754',
            info: '#0dcaf0',
            warning: '#ffc107',
            danger: '#dc3545'
        };

        document.addEventListener('DOMContentLoaded', function () {
            initializeCharts();
        });

        function initializeCharts() {
            // Books Timeline Chart
            createTimelineChart('booksTimelineChart', chartData.booksTimeline, 'Số sách đã thêm', colors.success);

            // Books by Genre Chart
            createPieChart('booksByGenreChart', chartData.booksByGenre, 'Genre', 'Count');

            // Books by Price Range Chart
            createBarChart('booksByPriceChart', chartData.booksByPriceRange, 'Range', 'Count', 'Mức giá', 'Số sách', colors.primary);

            // Most Viewed Books Chart
            createHorizontalBarChart('mostViewedChart', chartData.mostViewed, 'Title', 'ViewCount', 'Tiêu đề sách', 'Lượt xem', colors.info);

            // Books Without Reviews Chart
            createBarChart('booksWithoutReviewsChart', chartData.booksWithoutReviews, 'Title', 'CreatedDays', 'Tiêu đề sách', 'Ngày tạo', colors.warning);
        }

        function createTimelineChart(canvasId, data, label, color) {
            const ctx = document.getElementById(canvasId).getContext('2d');

            new Chart(ctx, {
                type: 'line',
                data: {
                    datasets: [{
                        label: label,
                        data: data,
                        borderColor: color,
                        backgroundColor: color + '20',
                        borderWidth: 2,
                        fill: true,
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                unit: 'day',
                                displayFormats: {
                                    day: 'MMM dd'
                                }
                            }
                        },
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }

        function createPieChart(canvasId, data, labelField, valueField) {
            const ctx = document.getElementById(canvasId).getContext('2d');

            const backgroundColors = [
                colors.primary, colors.success, colors.info, colors.warning, colors.danger,
                '#6f42c1', '#fd7e14', '#20c997', '#e83e8c', '#6c757d'
            ];

            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: data.map(item => item[labelField]),
                    datasets: [{
                        data: data.map(item => item[valueField]),
                        backgroundColor: backgroundColors.slice(0, data.length),
                        borderWidth: 2,
                        borderColor: '#fff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 20,
                                usePointStyle: true
                            }
                        }
                    }
                }
            });
        }

        function createBarChart(canvasId, data, labelField, valueField, xLabel, yLabel, color) {
            const ctx = document.getElementById(canvasId).getContext('2d');

            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.map(item => item[labelField]),
                    datasets: [{
                        label: yLabel,
                        data: data.map(item => item[valueField]),
                        backgroundColor: color + '80',
                        borderColor: color,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: xLabel
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: yLabel
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }

        function createHorizontalBarChart(canvasId, data, labelField, valueField, xLabel, yLabel, color) {
            const ctx = document.getElementById(canvasId).getContext('2d');

            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.map(item => {
                        // Truncate long titles
                        const title = item[labelField];
                        return title.length > 20 ? title.substring(0, 20) + '...' : title;
                    }),
                    datasets: [{
                        label: yLabel,
                        data: data.map(item => item[valueField]),
                        backgroundColor: color + '80',
                        borderColor: color,
                        borderWidth: 1
                    }]
                },
                options: {
                    indexAxis: 'y',
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: yLabel
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: xLabel
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }
    </script>
}